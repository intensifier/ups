dnl Process this file with autoconf to produce a configure script.
AC_INIT(dwarfdump.c)
AC_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_GCC_TRADITIONAL
AC_PROG_INSTALL
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(AR, ar)
dnl AC_ARFLAGS


dnl (IDE......................................................................)

dnl The test on $ups_cv_sys_symtab_maybe_dwarf only works if 'configure' is
dnl using a cache file, and as of AutoConf 2.53 the default is not to.

dnl The test on "-d ../libelf/lib" forces you to use the Elflib supplied
dnl with UPS rather than one already installed on the system.  So you must
dnl also do "make dwarfdump" from the top UPS directory to build it.

dnl Must be an neater way to do this.

AC_MSG_CHECKING(how to include libelf headers)
xtraCPPFLAGS=
set -vx
if test "X$ups_cv_sys_symtab_maybe_dwarf" = "Xyes"; then
    xtraCPPFLAGS="-Idevelhdrs"
elif test -d ../libelf/lib; then
    xtraCPPFLAGS="-Idevelhdrs"
    ac_cv_header_libelf_libelf_h=yes
else
    if test "x$prefix" != "xNONE"; then
       eval xtraCPPFLAGS="-I${includedir}"
    else
       prefix=$ac_default_prefix
       eval xtraCPPFLAGS="-I${includedir}"
       prefix=NONE
    fi
fi
CPPFLAGS="${CPPFLAGS} ${xtraCPPFLAGS}"
set +vx
AC_MSG_RESULT($xtraCPPFLAGS)
unset xtraCPPFLAGS

AC_MSG_CHECKING(where libelf is)
xtraLDFLAGS=
ELFLIB=-lelf
msg=
set -vx
if test "X$ups_cv_sys_symtab_maybe_dwarf" = "Xyes"; then
    msg="../libelf"
    ELFLIB='../libelf/lib/libelf.a'
elif test -d ../libelf/lib; then
    msg="../libelf"
    ELFLIB='../libelf/lib/libelf.a'
else
    if test "x$exec_prefix" != "xNONE"; then
       eval xtraLDFLAGS="-L${libdir}"
       msg=$xtraLDFLAGS
    else
       exec_prefix=$ac_default_prefix
       eval xtraLDFLAGS="-L${libdir}"
       exec_prefix=NONE
       msg=$xtraLDFLAGS
    fi
    ELFLIB="$xtraLDFLAGS -lelf"
    LDFLAGS="${LDFLAGS} ${xtraLDFLAGS}"
fi
set +xv
AC_MSG_RESULT($msg)
AC_SUBST(ELFLIB)
dnl (IDE......................................................................)


AC_HEADER_STDC
AC_CHECK_HEADERS(elf.h getopt.h libelf.h libelf/libelf.h sgidefs.h sys/types.h)
AC_CHECK_LIB(elf,elf64_getehdr,AC_DEFINE(HAVE_ELF64_GETEHDR))

dnl Find out where the elf header is.
if test "$ac_cv_header_elf_h" = yes; then
 AC_DEFINE(LOCATION_OF_LIBELFHEADER,[<elf.h>])
elif test "$ac_cv_header_libelf_h" = yes; then
 AC_DEFINE(LOCATION_OF_LIBELFHEADER, [<libelf.h>])
elif test "$ac_cv_header_libelf_libelf_h" = yes; then
 AC_DEFINE(LOCATION_OF_LIBELFHEADER,[<libelf/libelf.h>])
fi

AC_TRY_COMPILE([#include LOCATION_OF_LIBELFHEADER],  Elf64_Rel *p; int i; i = p->r_info; ,AC_DEFINE(HAVE_ELF64_R_INFO))
AC_TRY_COMPILE([],  __uint32_t p; p = 3; ,AC_DEFINE(HAVE___UINT32_T))
AC_TRY_COMPILE([],  __uint64_t p; p = 3; ,AC_DEFINE(HAVE___UINT64_T))
AC_TRY_COMPILE([#include <sys/types.h>],[  __uint32_t p; p = 3]; ,AC_DEFINE(HAVE___UINT32_T_IN_SYS_TYPES_H))


AC_OUTPUT(Makefile)
